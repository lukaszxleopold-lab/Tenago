import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";
import { createMiddlewareClient } from "@supabase/auth-helpers-nextjs";

export async function middleware(req: NextRequest) {
  console.log("üöÄ Middleware dzia≈Ça! PATH:", req.nextUrl.pathname);

  const res = NextResponse.next();
  const supabase = createMiddlewareClient({ req, res });

  // pobieramy aktualnƒÖ sesjƒô u≈ºytkownika
  const {
    data: { session },
  } = await supabase.auth.getSession();

  const pathname = req.nextUrl.pathname;

  // üîê je≈õli u≈ºytkownik NIEZALOGOWANY pr√≥buje wej≈õƒá na /dashboard lub /chat ‚Üí przekieruj na /login
  const protectedPaths = ["/dashboard", "/chat"];

  const requiresAuth = protectedPaths.some((path) =>
    pathname.startsWith(path)
  );

  if (requiresAuth && !session) {
    console.log("‚ö†Ô∏è Brak sesji ‚Äî przekierowanie do /login");
    const redirectUrl = req.nextUrl.clone();
    redirectUrl.pathname = "/login";
    return NextResponse.redirect(redirectUrl);
  }

  // ‚úÖ je≈õli user zalogowany lub ≈õcie≈ºka publiczna ‚Üí pozw√≥l przej≈õƒá
  return res;
}

// Middleware dzia≈Ça tylko na okre≈õlonych trasach (dashboard i chat)
export const config = {
  matcher: ["/dashboard/:path*", "/chat/:path*"],
};
